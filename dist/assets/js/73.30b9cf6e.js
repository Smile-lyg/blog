(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{780:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简单使用"}},[t._v("#")]),t._v(" 1. 简单使用")]),t._v(" "),a("p",[t._v("file > new 新建 collection ：接口集合，命名为项目的名字")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710162618865.png",alt:"image-20220710162618865"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710162848169.png",alt:"image-20220710162848169"}})]),t._v(" "),a("p",[t._v("右键集合名字 Add folder 添加一个文件夹，文件夹按模块名字分类")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710163118807.png",alt:"image-20220710163118807"}})]),t._v(" "),a("p",[t._v("右键文件夹，Add request 新增一个请求接口，命名一下便于区分")]),t._v(" "),a("p",[t._v("发起post请求")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710164218628.png",alt:"image-20220710164218628"}})]),t._v(" "),a("h2",{attrs:{id:"_2-环境变量的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-环境变量的使用"}},[t._v("#")]),t._v(" 2. 环境变量的使用")]),t._v(" "),a("p",[t._v("每次都要带上接口服务器地址，如上面的http://127.0.0.1，十分的麻烦。可以定义一个环境，然后引用里面变量的值即可")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710164550279.png",alt:"image-20220710164550279"}})]),t._v(" "),a("p",[t._v("下拉选择对应的环境，然后使用 "),a("code",[t._v(t._s(t.变量名))]),t._v(" 来引入变量值")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710164806470.png",alt:"image-20220710164806470"}})]),t._v(" "),a("p",[t._v("如果接口地址发生改变，这样只需要在外面环境里面更改对应的变量值就行。")]),t._v(" "),a("p",[t._v("开发环境 和 项目上线后的环境，直接切换即可，不需要去改动每个接口。")]),t._v(" "),a("h2",{attrs:{id:"_3-统一添加-authorization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-统一添加-authorization"}},[t._v("#")]),t._v(" 3. 统一添加 authorization")]),t._v(" "),a("p",[t._v("一般项目里面使用 JWT（json web token），做用户登录态的保持，和验证。登录成功后，后端会返回一个 token 字符串，之后涉及到的接口的请求需要在请求头 request header 里面 添加 authorization 字段，值是服务器返回的 token 值。用于验证。")]),t._v(" "),a("p",[t._v("在集合里面新建一个 变量 token")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710165522633.png",alt:"image-20220710165522633"}})]),t._v(" "),a("p",[t._v("然后统一在集合里面 设置添加 authorization")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710165609726.png",alt:"image-20220710165609726"}})]),t._v(" "),a("p",[t._v("接口的authorization字段默认从上一级继承，这样每次请求时都会携带上了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710165744946.png",alt:"image-20220710165744946"}})]),t._v(" "),a("p",[t._v("但是这样，每次登录后还要手动复制token的值，然后去修改变量，十分的麻烦")]),t._v(" "),a("h2",{attrs:{id:"_4-脚本的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-脚本的使用"}},[t._v("#")]),t._v(" 4. 脚本的使用")]),t._v(" "),a("p",[t._v("在登录 login 请求的test里面编写脚本，test脚本是会在请求结束后执行。在脚本里面设置更新环境变量")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs/image-20220710170417999.png",alt:"image-20220710170417999"}})]),t._v(" "),a("p",[t._v("每次登录请求结束就会重新设置token的值为最新返回的值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" pm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your test name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将返回结果进行json化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置集合里面的 token 变量的值")]),t._v("\n    pm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collectionVariables"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);